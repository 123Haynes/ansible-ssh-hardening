---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: centos6
    image: "rndmh3ro/docker-centos6-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: centos7
    image: "rndmh3ro/docker-centos7-ansible:latest"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    privileged: true
    pre_build_image: true
    command: "/usr/lib/systemd/systemd"
  - name: oracle6
    image: "rndmh3ro/docker-oracle6-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
#  - name: oracle7
#    image: "rndmh3ro/docker-oracle7-ansible:latest"
#    volumes:
#      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    privileged: true
#    pre_build_image: true
#    command: "/lib/systemd/systemd"
  - name: ubuntu1404
    image: "rndmh3ro/docker-ubuntu1404-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
  - name: ubuntu1604
    image: "rndmh3ro/docker-ubuntu1604-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    command: "/lib/systemd/systemd"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
  - name: ubuntu1804
    image: "rndmh3ro/docker-ubuntu1804-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    command: "/lib/systemd/systemd"
  - name: debian7
    image: "rndmh3ro/docker-debian7-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
  - name: debian8
    image: "rndmh3ro/docker-debian8-ansible:latest"
    privileged: true
    pre_build_image: true
    command: "/lib/systemd/systemd"
  - name: debian9
    image: "rndmh3ro/docker-debian9-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    command: "/lib/systemd/systemd"

provisioner:
  name: ansible
  lint:
    name: ansible-lint
  playbooks:
    converge: playbook.yml
scenario:
  name: default
  test_sequence:
    #- lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - destroy
verifier:
  name: testinfra
  lint:
    name: flake8
